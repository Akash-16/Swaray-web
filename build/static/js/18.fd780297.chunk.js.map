{"version":3,"sources":["pages/TrustDevice/index.tsx"],"names":["TrustDevicePage","state","useLocation","navigate","useNavigate","allowAccess","localStorage","setItem","data","accessToken","token","Client","defaults","headers","common","routes","welcomeScreenPage","className","onClick","sessionStorage","variant","color","size","fullWidth","React","memo"],"mappings":"mMASA,SAASA,IACP,IAAQC,EAAUC,cAAVD,MAEFE,EAAWC,cAUXC,EAAW,iDAAG,kGAClBC,aAAaC,QAAQ,SAArB,OAA+BN,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAOO,YAAtC,aAA+B,EAAaC,YAAYC,OACxDC,IAAOC,SAASC,QAAQC,OAAxB,+BACO,OAALb,QAAK,IAALA,KAAOO,KAAP,OAAcP,QAAd,IAAcA,GAAd,UAAcA,EAAOO,YAArB,aAAc,EAAaC,YAAYC,MAAvC,UAA+CT,EAAMQ,mBAArD,aAA+C,EAAmBC,OAEpEP,EAASY,IAAOC,mBALE,2CAAH,qDAQjB,OACE,qBAAKC,UAAU,0DAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,uBAAMA,UAAU,kEAAhB,UACE,qBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,qBACA,oBAAIA,UAAU,4CAAd,gCACA,mBAAGA,UAAU,wCAAb,uEAKJ,sBAAKA,UAAU,2CAAf,UACE,mBAAGC,QA9BI,WAAO,IAAD,MACrBC,eAAeZ,QAAQ,SAAvB,OAAiCN,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAOO,YAAxC,aAAiC,EAAaC,YAAYC,OAC1DC,IAAOC,SAASC,QAAQC,OAAxB,+BACO,OAALb,QAAK,IAALA,KAAOO,KAAP,OAAcP,QAAd,IAAcA,GAAd,UAAcA,EAAOO,YAArB,aAAc,EAAaC,YAAYC,MAAvC,UAA+CT,EAAMQ,mBAArD,aAA+C,EAAmBC,OAEpEP,EAASY,IAAOC,kBACjB,EAwB+BC,UAAU,wCAAhC,kBAGA,cAAC,IAAD,CACEG,QAAQ,YACRC,MAAM,UACNC,KAAK,QACLC,WAAS,EACTL,QAASb,EALX,mCAaX,CAEcmB,cAAMC,KAAKzB,E","file":"static/js/18.fd780297.chunk.js","sourcesContent":["import React from 'react';\n\n//Material Design\nimport { Button } from '@mui/material';\n\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport routes from '../../constants/routes';\nimport { Client } from '../../config';\n\nfunction TrustDevicePage() {\n  const { state } = useLocation() as any;\n\n  const navigate = useNavigate();\n\n  const skipPage = () => {\n    sessionStorage.setItem('usertk', state?.data?.accessToken.token);\n    Client.defaults.headers.common['Authorization'] = `Bearer ${\n      state?.data ? state?.data?.accessToken.token : state.accessToken?.token\n    }`;\n    navigate(routes.welcomeScreenPage);\n  };\n\n  const allowAccess = async () => {\n    localStorage.setItem('usertk', state?.data?.accessToken.token);\n    Client.defaults.headers.common['Authorization'] = `Bearer ${\n      state?.data ? state?.data?.accessToken.token : state.accessToken?.token\n    }`;\n    navigate(routes.welcomeScreenPage);\n  };\n\n  return (\n    <div className=\"verify-page-inside d-flex flex-column align-center p-24\">\n      <div className=\"relative h-100 index-1\">\n        <form className=\"flex-1 d-flex flex-column justify-center h-100 relative index-1\">\n          <div className=\"flex-1 d-flex align-center h-100\">\n            <div className=\"text-center\">\n              <p className=\"f-48 mb-16\">âœ… </p>\n              <h1 className=\"f-28 f-w-700 l-h-normal txt-primary mb-20\">Trust this device?</h1>\n              <p className=\"f-18 f-w-500 l-h-22 txt-primary px-32\">\n                Allow access so we can trust this device for 30 days\n              </p>\n            </div>\n          </div>\n          <div className=\"w-100 text-center relative index-1 mb-24\">\n            <p onClick={skipPage} className=\"f-18 f-w-700 l-h-22 txt-primary mb-24\">\n              Skip\n            </p>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              fullWidth\n              onClick={allowAccess}>\n              Allow access\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(TrustDevicePage);\n"],"sourceRoot":""}