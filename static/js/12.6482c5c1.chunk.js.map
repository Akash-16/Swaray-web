{"version":3,"sources":["../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/FormControl/formControlClasses.js","../node_modules/@mui/material/FormControl/FormControl.js","pages/ForgotPassword/index.tsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getFormControlUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlRoot","styled","name","overridesResolver","styles","ownerState","_extends","root","capitalize","margin","fullWidth","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginTop","marginBottom","width","FormControl","React","inProps","ref","props","useThemeProps","children","className","color","component","disabled","error","visuallyFocused","focused","hiddenLabel","required","size","variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","initialAdornedStart","forEach","child","isMuiElement","input","isAdornedStart","adornedStart","setAdornedStart","initialFilled","isFilled","filled","setFilled","focusedState","setFocused","registerEffect","undefined","childContext","onBlur","onEmpty","onFilled","onFocus","_jsx","FormControlContext","Provider","as","clsx","ForgotPassword","useState","open","setOpen","phoneNumber","setPhoneNumber","dispatch","useDispatch","navigate","useNavigate","handleClose","sendOtp","reCaptchaVerifier","RecaptchaVerifier","app","number","signInWithPhoneNumber","getResult","recaptchaDetails","routes","verifyPage","state","isForgotPasswordPage","id","placeholder","onChange","e","target","onClick","onClose","memo"],"mappings":"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","file":"static/js/12.6482c5c1.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);\nexport default formControlClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      component = 'div',\n      disabled = false,\n      error = false,\n      focused: visuallyFocused,\n      fullWidth = false,\n      hiddenLabel = false,\n      margin = 'none',\n      required = false,\n      size = 'medium',\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithPhoneNumber, RecaptchaVerifier } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\n\n//Material Design\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Dialog,\n  DialogContent,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { app } from '../../config';\nimport { Input } from '../../components';\nimport { recaptchaDetails } from '../../redux/verifyOtp';\nimport routes from '../../constants/routes';\n\nconst ForgotPassword = () => {\n  const [open, setOpen] = React.useState(false);\n  const [phoneNumber, setPhoneNumber] = React.useState<string>('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const sendOtp = async () => {\n    const reCaptchaVerifier = new RecaptchaVerifier(\n      'request-otp',\n      {\n        size: 'normal',\n      },\n      app\n    );\n    const number = `+91${phoneNumber}`;\n    const getResult = await signInWithPhoneNumber(\n      app,\n      number,\n      reCaptchaVerifier\n    );\n    dispatch(recaptchaDetails(getResult));\n    navigate(routes.verifyPage, {\n      state: {\n        phoneNumber: phoneNumber,\n        isForgotPasswordPage: true,\n      },\n    });\n  };\n\n  return (\n    <div className='signup-page-inside d-flex flex-column align-center p-24'>\n      <div className='w-100 h-100 d-flex flex-column justify-between'>\n        <div className='relative index-1'>\n          <div>\n            <h1 className='f-28 f-w-700 l-h-normal txt-primary mb-24'>\n              Forgot Password\n            </h1>\n          </div>\n          <FormControl variant='outlined' fullWidth className='mb-16'>\n            <label className='form-label'>Phone number or email</label>\n            <Input\n              id='outlined-adornment-weight'\n              placeholder='ex: +1 44423847384'\n              value={phoneNumber}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n            />\n          </FormControl>\n        </div>\n        <div>\n          <Button\n            variant='contained'\n            color='primary'\n            size='large'\n            fullWidth\n            disabled={phoneNumber ? false : true}\n            onClick={handleClickOpen}\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby='customized-dialog-title'\n        className='forgot-password-modal'\n        open={open}\n      >\n        <DialogContent>\n          <IconButton\n            onClick={handleClose}\n            aria-label='close'\n            className='mb-24'\n          >\n            <CloseIcon className='f-24 txt-secondary' />\n          </IconButton>\n          <p className='f-18 f-w-700 l-h-normal txt-primary mb-12'>\n            Forgot Password\n          </p>\n          <p className='f-14 f-w-500 l-h-22 txt-primary mb-32'>\n            In order to reset your Password we need to verify this request with\n            your mobile device!\n          </p>\n          <div id='request-otp'></div>\n          <Button\n            onClick={sendOtp}\n            variant='contained'\n            color='primary'\n            size='large'\n            fullWidth\n          >\n            Request Code\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default React.memo(ForgotPassword);\n"],"sourceRoot":""}