{"version":3,"sources":["constants/successMessage.ts","pages/MyProfile/index.tsx"],"names":["SuccessMessage","WallectConnect","removeCard","MyUserProfile","useState","loading","setIsLoading","enqueueSnackbar","useSnackbar","useWeb3React","activate","active","account","navigate","deactivate","useNavigate","deviceId","useDeviceId","useSelector","state","userDetails","isLoading","provider","localStorage","getItem","React","useEffect","connectWallet","ConnectWallet","error","console","log","removeItem","signOutUser","Client","patch","apiRoutes","trustDevice","token","data","post","signOut","refreshToken","statusCode","HttpStatus","OK","sessionStorage","routes","signInPage","walletConnectApi","useCallback","cryptoWallets","address","type","preventDuplicate","variant","persist","Errors","appError","walletConnect","length","setItem","className","background","src","alt","profilePhoto","firstName","lastName","username","onClick","viewBalance","isWalletActive","primary","SwarayCoinLogo","wallet","pts","substring","disabled","memo"],"mappings":"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","file":"static/js/11.c7bb4c51.chunk.js","sourcesContent":["export const SuccessMessage = {\n  WallectConnect: 'wallet Connected Successfully',\n  removeCard: 'Card removed Successfully'\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSnackbar } from 'notistack';\n\n//Material Design\nimport { Avatar, Button } from '@mui/material';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\n\nimport { SwarayCoinLogo } from '../../assets/img';\nimport { UserDetails } from '../../common/interface/userDetails.interface';\nimport { AppLoader } from '../../components';\n\n//styles\nimport './style.scss';\nimport { Client } from '../../config';\nimport { apiRoutes } from '../../constants/apiRoutes';\nimport routes from '../../constants/routes';\nimport { HttpStatus } from '../../common/enum/statusCode.enum';\nimport { ConnectWallet } from '../../config';\nimport { Errors } from '../../constants/errors';\nimport { SuccessMessage } from '../../constants/successMessage';\nimport { useDeviceId } from '../../hooks';\n\ninterface loggedInUser {\n  userDetails: {\n    userDetails: UserDetails;\n    isLoading: boolean;\n  };\n}\n\ninterface userDetails {\n  userDetails: UserDetails;\n  isLoading: boolean;\n}\n\ninterface Istate {\n  refreshToken: string;\n}\n\nconst MyUserProfile = () => {\n  const [loading, setIsLoading] = useState<boolean>(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { activate, active, account, deactivate } = useWeb3React();\n\n  const navigate = useNavigate();\n\n  const deviceId = useDeviceId();\n\n  const { userDetails, isLoading }: userDetails = useSelector(\n    (state: loggedInUser) => state?.userDetails\n  );\n\n  const provider = localStorage.getItem('provider');\n\n  React.useEffect(() => {\n    const connectWallet = localStorage.getItem('walletconnect');\n    if (provider || connectWallet) {\n      activate(ConnectWallet, (error) => {\n        console.log(error);\n        localStorage.removeItem('provider');\n      });\n    }\n  }, []);\n\n  const signOutUser = async () => {\n    setIsLoading(true);\n    const { data: token } = await Client.patch(apiRoutes.trustDevice, {\n      deviceId,\n    });\n\n    const { data } = await Client.post(apiRoutes.signOut, {\n      refreshToken: token.data?.refreshToken?.token,\n    });\n    setIsLoading(false);\n    if (data?.statusCode === HttpStatus.OK) {\n      localStorage.removeItem('usertk');\n      sessionStorage.removeItem('usertk');\n      localStorage.removeItem('walletconnect');\n      localStorage.removeItem('provider');\n      navigate(routes.signInPage);\n    }\n  };\n\n  const walletConnectApi = React.useCallback(async () => {\n    if (provider && account) {\n      const { data } = await Client.post(apiRoutes.cryptoWallets, {\n        address: account,\n        type: provider,\n      });\n      if (data?.data) {\n        enqueueSnackbar(SuccessMessage.WallectConnect, {\n          preventDuplicate: true,\n          variant: 'success',\n          persist: false,\n        });\n      } else {\n        enqueueSnackbar(Errors.appError, {\n          preventDuplicate: true,\n          variant: 'error',\n          persist: false,\n        });\n      }\n    }\n  }, [account, provider]);\n\n  const walletConnect = async () => {\n    if (userDetails.cryptoWallets?.length >= 0) {\n      localStorage.setItem('provider', 'walletConnect');\n      await activate(ConnectWallet, (error) => {\n        console.log('error', error);\n        localStorage.removeItem('provider');\n      });\n      await walletConnectApi();\n    }\n  };\n\n  /*\n    TODO: need to implement this method once client confirmation\n  */\n\n  const disConnectWallet = async () => {\n    await deactivate();\n    localStorage.removeItem('provider');\n    await Client.get(apiRoutes.removeWallets);\n  };\n\n  return (\n    <>\n      <div className='my-profile-content'>\n        <div className='profile-header'>\n          <div className='profile-image'>\n            {userDetails?.background && (\n              <img src={userDetails?.background} alt='profile' />\n            )}\n          </div>\n          <div className='d-flex align-end h-100 px-20 py-16 relative index-2'>\n            <div className='mr-12'>\n              <Avatar\n                alt='AK'\n                src={userDetails?.profilePhoto}\n                className='profile-img bordered-white'\n              />\n            </div>\n            <div className='flex-1'>\n              <h3 className='f-18 f-w-600 l-h-normal txt-primary'>\n                {userDetails?.firstName} {userDetails?.lastName}\n              </h3>\n              <p className='f-14 f-w-400 l-h-normal txt-color-primary mt-4'>\n                @{userDetails?.username}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className='p-20'>\n          <List className='my-profile-menu d-grid g-8'>\n            <ListItem\n              onClick={() =>\n                navigate(routes.viewBalance, {\n                  state: {\n                    isWalletActive: active,\n                  },\n                })\n              }\n            >\n              <div className='d-flex align-center justify-between w-100'>\n                <div className='flex-1 d-flex justify-between'>\n                  <ListItemText primary='My Balance' />\n                  <div className='d-flex align-center'>\n                    <img\n                      src={SwarayCoinLogo}\n                      alt=''\n                      className='img sawaray-coin-img'\n                    />\n                    <p className='f-14 f-w-500 l-h-normal txt-primary ml-4'>\n                      {userDetails?.wallet?.pts}\n                    </p>\n                  </div>\n                </div>\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n            <ListItem>\n              <div className='d-flex justify-between w-100'>\n                <div className={active ? 'connected-dot' : 'active-dot'} />\n                <ListItemText\n                  onClick={walletConnect}\n                  primary={\n                    !active\n                      ? 'Connect crypto wallet'\n                      : `${\n                          account && account?.length >= 15\n                            ? `${account?.substring(0, 15)}... Connected`\n                            : account\n                        }`\n                  }\n                  className='flex-1'\n                />\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n            <ListItem disabled>\n              <div className='d-flex justify-between w-100'>\n                <ListItemText primary='My Fan Pages' className='flex-1' />\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n            <ListItem disabled>\n              <div className='d-flex justify-between w-100'>\n                <ListItemText primary='Favorites' className='flex-1' />\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n            <ListItem disabled>\n              <div className='d-flex justify-between w-100'>\n                <ListItemText\n                  primary='Monthly subscriptions'\n                  className='flex-1'\n                />\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n            <ListItem disabled>\n              <div className='d-flex justify-between w-100'>\n                <ListItemText primary='Account settings' className='flex-1' />\n                <KeyboardArrowRightIcon className='txt-secondary' />\n              </div>\n            </ListItem>\n          </List>\n          <div className='text-center mt-32 mb-20'>\n            <Button\n              onClick={signOutUser}\n              className='f-16 f-w-500 l-h-normal txt-primary'\n            >\n              Sign out\n            </Button>\n          </div>\n        </div>\n      </div>\n      <AppLoader loading={isLoading || loading} />\n    </>\n  );\n};\n\nexport default React.memo(MyUserProfile);\n"],"sourceRoot":""}